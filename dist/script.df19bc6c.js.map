{"version":3,"sources":["assets/js/api-calls.ts","assets/js/selectors.ts","assets/js/form.ts","assets/js/client-storage.ts","assets/data/sorted-assignments.ts","assets/components/class-card-table-row.ts","assets/components/class-cards.ts","assets/js/assignments.ts","assets/js/alert.ts","assets/components/cohort-button.ts","assets/components/class-table.ts","assets/js/script.ts"],"names":[],"mappings":"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","file":"script.df19bc6c.js","sourceRoot":"..\\src","sourcesContent":["import { me } from '../../hide/me';\nimport { assignments } from '../../hide/assignments-res';\nimport { grades } from '../../hide/grades';\n\nimport LoginRes, { LoginForm } from './types/login-types';\nimport StudentAssignmentGrades from './types/grades';\nimport Me from './types/me-types';\nimport CohortAssignments from './types/calendar-assignments';\n\nconst rootUrl = `https://bootcampspot.com`;\n\ntype GetGrades = (arg1?: number, arg2?: string | null) => Promise<StudentAssignmentGrades[]>;\ntype GetMe = (arg1?: string | null) => Promise<Me>;\ntype GetCohortAssignments = (arg1?: number, arg2?: string | null) => Promise<CohortAssignments>;\n\nexport const getToken = ({ email, password }: LoginForm) => {\n  // const mockLogin: LoginRes = {\n  //   success: true,\n  //   errorCode: null,\n  //   resetToken: null,\n  //   authenticationInfo: {\n  //     userId: 13786,\n  //     firstLogin: false,\n  //     active: true,\n  //     authToken: 'fake-token',\n  //   },\n  // };\n  if (!email || !password) {\n    throw new Error('Complete Login form');\n  }\n  // if (password === 'error') {\n  //   console.log('error');\n  //   mockLogin.errorCode = 'Incorrect Credentials';\n  //   mockLogin.success = false;\n  //   mockLogin.authenticationInfo = null;\n  // }\n  // return Promise.resolve(mockLogin);\n  const url = rootUrl + '/api/instructor/v1/login';\n  return $.ajax({\n    contentType: 'application/json',\n    dataType: 'json',\n    type: 'POST',\n    url: url,\n    data: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n};\n\nexport const getGrades: GetGrades = (courseId, authToken) => {\n  if (!courseId || !authToken) {\n    throw new Error('missing course id or auth token');\n  }\n  // return Promise.resolve(grades);\n  const url = rootUrl + '/api/instructor/v1/grades';\n  return new Promise((resolve, reject) => {\n    resolve(\n      $.ajax({\n        url: url,\n        type: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          authToken: authToken,\n        },\n        data: JSON.stringify({ courseId }),\n        contentType: 'application/json',\n      })\n    );\n  });\n};\n\nexport const getMe: GetMe = (authToken) => {\n  if (!authToken) {\n    throw new Error('No Auth Token Provided');\n  }\n  // return Promise.resolve(me);\n  const url = rootUrl + '/api/instructor/v1/me';\n  return Promise.resolve(\n    $.ajax({\n      url: url,\n      type: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authToken: authToken,\n      },\n    })\n  );\n};\n\nexport const getCohortAssignments: GetCohortAssignments = (enrollmentId, authToken) => {\n  if (!authToken) {\n    throw new Error('No Auth Token Provided');\n  }\n  console.log('enrollment id: ', enrollmentId, ' & ', authToken);\n  // return Promise.resolve(assignments);\n  const url = rootUrl + '/api/instructor/v1/assignments';\n  return Promise.resolve(\n    $.ajax({\n      url,\n      type: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        authToken: authToken,\n      },\n      data: JSON.stringify({ enrollmentId }),\n    })\n  );\n};\n","// import jquery from 'jquery';\n// const $ = (window.$ = window.jQuery = jquery);\n\nexport const loginForm: JQuery<HTMLFormElement> = $('.login-form');\nexport const inputs: JQuery<HTMLInputElement> = $('.login-form input');\nexport const loginFormContainer: JQuery<HTMLFormElement> = $('.login-form-container');\nexport const getGradesBtn: JQuery<HTMLButtonElement> = $('.get-grades');\nexport const assignmentRootElem: JQuery<HTMLDivElement> = $('.assignment-cards');\nexport const assignmentButtonContainer: JQuery<HTMLDivElement> = $('.assignment-buttons');\nexport const logoutButtonElem: JQuery<HTMLButtonElement> = $('.logout-button');\nexport const alertDangerElem: JQuery<HTMLDivElement> = $('.alert-danger');\nexport const alertInfoElem: JQuery<HTMLDivElement> = $('.alert-info');\n\nexport default $;\n","import { logoutButtonElem } from './selectors';\n\nexport const getFormData = (tar: HTMLInputElement[]) => {\n  const formData: { [key: string]: string } = {};\n  const clearableInputs = [];\n  for (let i = 0; i < tar.length; i++) {\n    const item: HTMLInputElement = tar[i];\n    if (item.nodeName === 'INPUT') {\n      const { name, value } = item;\n      formData[name] = value.trim();\n      clearableInputs.push(item);\n    }\n  }\n  return { formData, clearableInputs };\n};\n\nexport const hideForm = (formContainer: JQuery<HTMLFormElement>) => {\n  formContainer.addClass('d-none');\n};\nexport const showForm = (formContainer: JQuery<HTMLFormElement>) => {\n  formContainer.removeClass('d-none');\n};\n\nexport const showLogoutButton = () => {\n  logoutButtonElem.removeClass('d-none');\n};\nexport const hideLogoutButton = () => {\n  logoutButtonElem.addClass('d-none');\n};\n","export const getUserObj = () => {\n  return JSON.parse(sessionStorage.getItem('userObj')) ?? {};\n};\n\nexport const getLocalToken = () => {\n  return getUserObj().authToken;\n};\n\nexport const updateUserObj = (argObj) => {\n  sessionStorage.setItem('userObj', JSON.stringify({ ...getUserObj(), ...argObj }));\n};\n\nexport const clearStorage = () => {\n  sessionStorage.clear();\n};\n","import { SortedAssignment } from '../js/types/grades';\n\nexport const sortedAssignments: SortedAssignment[] = [\n  {\n    assignmentTitle: '0: Web Development Prework',\n    sortOrder: 0,\n    grades: [],\n  },\n  {\n    assignmentTitle: '1: Code Refactor',\n    sortOrder: 1,\n    grades: [],\n  },\n  {\n    assignmentTitle: '2: Professional Portfolio',\n    sortOrder: 2,\n    grades: [],\n  },\n  {\n    assignmentTitle: '3: Password Generator',\n    sortOrder: 3,\n    grades: [],\n  },\n  {\n    assignmentTitle: '4: Code Quiz',\n    sortOrder: 4,\n    grades: [],\n  },\n  {\n    assignmentTitle: '5: Day Planner',\n    sortOrder: 5,\n    grades: [],\n  },\n  {\n    assignmentTitle: '6: Weather Dashboard',\n    sortOrder: 6,\n    grades: [],\n  },\n  {\n    assignmentTitle: 'Project 1',\n    sortOrder: 7,\n    grades: [],\n  },\n  {\n    assignmentTitle: 'Updated Portfolio Page',\n    sortOrder: 8,\n    grades: [],\n  },\n  {\n    assignmentTitle: '9: Good README Generator',\n    sortOrder: 9,\n    grades: [],\n  },\n  {\n    assignmentTitle: '10: Team Profile Generator',\n    sortOrder: 10,\n    grades: [],\n  },\n  {\n    assignmentTitle: '11: Note Taker',\n    sortOrder: 11,\n    grades: [],\n  },\n  {\n    assignmentTitle: '12: Employee Management System',\n    sortOrder: 12,\n    grades: [],\n  },\n  {\n    assignmentTitle: '13: E-Commerce Back End',\n    sortOrder: 13,\n    grades: [],\n  },\n  {\n    assignmentTitle: '14: Tech Blog',\n    sortOrder: 14,\n    grades: [],\n  },\n  {\n    assignmentTitle: 'Project 2',\n    sortOrder: 15,\n    grades: [],\n  },\n  {\n    assignmentTitle: 'Updated Portfolio Page #2',\n    sortOrder: 16,\n    grades: [],\n  },\n  {\n    assignmentTitle: '17: Fitness Tracker',\n    sortOrder: 17,\n    grades: [],\n  },\n  {\n    assignmentTitle: '18: Progressive Budget',\n    sortOrder: 18,\n    grades: [],\n  },\n  {\n    assignmentTitle: '19: User Directory',\n    sortOrder: 19,\n    grades: [],\n  },\n  {\n    assignmentTitle: '20: React Portfolio',\n    sortOrder: 20,\n    grades: [],\n  },\n  {\n    assignmentTitle: '21: Google Books React Search',\n    sortOrder: 21,\n    grades: [],\n  },\n  {\n    assignmentTitle: 'Project 3',\n    sortOrder: 22,\n    grades: [],\n  },\n];\n","import { AdaptedGrades } from '../js/types/grades';\n\ntype TableRow = (arg0: AdaptedGrades) => string;\n\nexport const tableRow: TableRow = ({ submitted, studentName, grade }) => {\n  return /*html*/ `<tr class=${submitted ? '' : 'not-submitted'}>\n  <td>${studentName}</td>\n  <td>${grade}</td>\n</tr>\n  `;\n};\n","export const assignmentCard = ({ title, grades }) => {\n  return /*html*/ `\n<div class=\"table-card\">\n  <thead>\n    <h4>${title}</h4>\n    <table class=\"w-100\">\n      <tr>\n        <th>Student</th>\n        <th>Grade</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${grades}\n    </tbody>\n    </table>\n</div>\n  `;\n};\n","import { sortedAssignments } from '../data/sorted-assignments';\nimport { tableRow } from '../components/class-card-table-row';\nimport { assignmentCard } from '../components/class-cards';\n\nimport Grades, { SortedAssignment, AdaptedGrades, MappedStudentsWithAssignments } from './types/grades';\nimport StudentAssignmentGrade from './types/grades';\nimport CohortAssignments, { MappedAssignments } from './types/calendar-assignments';\n\nexport const buildGrades = (grades: Grades[]) => {\n  const assignments = sortedAssignments.map((item) => ({ ...item }));\n  grades.forEach((item) => {\n    const index = assignments.findIndex((assignment) => assignment.assignmentTitle === item.assignmentTitle);\n    if (index === -1) return;\n    const { studentName, submitted, grade } = item;\n    assignments[index].grades = [...assignments[index].grades, { studentName, submitted, grade }];\n  });\n  return assignments;\n};\n\nconst ntiOrNotGraded = (submitted: boolean) => {\n  return submitted ? 'NG' : 'NTI';\n};\n\nexport const buildStudentAssignmentGrades = (data: StudentAssignmentGrade[], currentAssignments: MappedAssignments) => {\n  const studentMap: MappedStudentsWithAssignments = new Map();\n  data.forEach((item) => {\n    const assignment = currentAssignments.get(item.assignmentTitle);\n    if (!assignment) return;\n    const { studentName, grade, submitted, ...rest } = item;\n    const { assignmentDate, dueDate } = assignment;\n    const assignments = studentMap.get(studentName) || [];\n    const mappedGrade = grade ?? ntiOrNotGraded(submitted);\n    studentMap.set(studentName, [...assignments, { ...rest, grade: mappedGrade, submitted, assignmentDate, dueDate }]);\n  });\n\n  for (let [_key, value] of studentMap) {\n    value.sort((a, b) => a.assignmentDate.valueOf() - b.assignmentDate.valueOf());\n  }\n  return studentMap;\n};\n\nexport const buildCurrentCalendarAssignmentList = (data: CohortAssignments) => {\n  const now = new Date();\n  return data.calendarAssignments.reduce((acc: string[], item) => {\n    if (item.category.code === 'career' || new Date(item.assignmentDate) > now) return acc;\n    return [...acc, item.title];\n  }, []);\n};\n\nconst buildTableRows = (grades: AdaptedGrades[]) => {\n  return grades.map((grade) => tableRow(grade)).join('');\n};\n\nexport const buildAssignmentCards = (assignmentRoot: JQuery, data: SortedAssignment[]) => {\n  data.forEach(({ assignmentTitle: title, grades }) => {\n    // console.log('Grades: ', grades);\n    const card = assignmentCard({\n      title: title,\n      grades: buildTableRows(grades),\n    });\n    assignmentRoot.append(card);\n  });\n};\n\nexport const reduceCohortAssignments = (data: CohortAssignments): MappedAssignments => {\n  const now = new Date();\n  const output = new Map();\n\n  data.calendarAssignments.forEach((item) => {\n    if (item.category.code === 'career' || new Date(item.assignmentDate) > now) return;\n    const { title, assignmentDate, dueDate, required, id } = item;\n    output.set(item.title, {\n      title,\n      required,\n      assignmentDate: new Date(assignmentDate),\n      dueDate: new Date(dueDate),\n      id,\n    });\n  });\n\n  return output;\n};\n","// import jquery from 'jquery';\n// const $ = (window.$ = window.jQuery = jquery);\n\n// const logoutButtonElem = $('.logout-button');\n\n// const alertDangerElem = $('.alert-danger');\n// const alertInfoElem = $('.alert-info');\n\nimport { alertDangerElem, alertInfoElem, logoutButtonElem } from './selectors';\n\ntype Alert = (message: string, time?: number | null) => void;\n\nconst hideElement = (element: JQuery<HTMLElement>) => {\n  element.text('');\n  element.addClass('d-none');\n};\nconst showElement = (element: JQuery<HTMLElement>, message: string, time?: number | null) => {\n  element.text(message);\n  element.removeClass('d-none');\n  hideAfter(element, time);\n};\n\nconst hideAfter = (elem: JQuery<HTMLElement>, time: null | number = 1000) => {\n  if (time === null) return;\n  setTimeout(() => {\n    hideElement(elem);\n  }, time);\n};\n\nexport const alertDanger: Alert = (message, time) => {\n  showElement(alertDangerElem, message, time);\n};\n\nexport const alertInfo: Alert = (message, time) => {\n  showElement(alertInfoElem, message, time);\n};\n\nexport const hideAlert = (type?: string) => {\n  switch (type) {\n    case 'danger':\n      hideElement(alertDangerElem);\n      break;\n    case 'info':\n      hideElement(alertInfoElem);\n      break;\n    default:\n      hideElement(alertDangerElem);\n      hideElement(alertInfoElem);\n      break;\n  }\n};\n","export const cohortButton = ({ id, cohortName, courseId }: { id: number; cohortName: string; courseId: number }) => {\n  return $(`\n<button class=\"btn btn-primary mx-1\" data-id=\"${id}\" data-course-id=\"${courseId}\">${cohortName}</button>\n  `);\n};\n","import { MappedAssignments } from '../js/types/calendar-assignments';\nimport { MappedStudentsWithAssignments } from '../js/types/grades';\n\nconst assignmentTitles = (assignments: MappedAssignments) => {\n  const headers = [];\n  for (const [key] of assignments) {\n    headers.push(`<th scope=\"col\" class=\"table-header-rotate\"><div><span class=\"pl-2\">${key}</span></div></th>`);\n  }\n  return headers.join('');\n};\n\nconst studentGrades = (students: MappedStudentsWithAssignments) => {\n  const studentRow = [];\n  for (const [name, value] of students) {\n    studentRow.push(`\n    <tr class=\"grade-table-row\">\n    <td>${name}</td>\n    ${value.map(({ grade }) => `<td ${grade === 'NTI' ? 'class=\"NTI\"' : ''}>${grade}</td>`).join('')}\n    </tr>\n    `);\n  }\n  return studentRow.join('');\n};\n\nexport const classTable = ({\n  assignments,\n  students,\n}: {\n  assignments: MappedAssignments;\n  students: MappedStudentsWithAssignments;\n}) => {\n  return /*html*/ `\n  <table class=\"table table-striped table-bordered grade-table\">\n    <thead class=\"grade-table-header thead-light\">\n      <tr>\n        <th scope=\"col\">Student</th>\n        ${assignmentTitles(assignments)}\n      </tr>\n    </thead>\n    <tbody class=\"grade-table-body\">\n      ${studentGrades(students)}\n    </tbody>\n  </table>\n  `;\n};\n","import { getToken, getGrades, getMe, getCohortAssignments } from './api-calls';\nimport { getFormData, showForm, hideForm, showLogoutButton, hideLogoutButton } from './form';\nimport { getLocalToken, updateUserObj, clearStorage } from './client-storage';\nimport { reduceCohortAssignments, buildStudentAssignmentGrades } from './assignments';\nimport { alertInfo, alertDanger, hideAlert } from './alert';\nimport { cohortButton } from '../components/cohort-button';\nimport { classTable } from '../components/class-table';\n\nimport {\n  loginForm,\n  inputs,\n  loginFormContainer,\n  assignmentRootElem,\n  assignmentButtonContainer,\n  logoutButtonElem,\n} from './selectors';\n\nimport { Enrollment, AdaptedEnrollment } from './types/me-types';\nimport { MappedAssignments } from './types/calendar-assignments';\nimport { MappedStudentsWithAssignments } from './types/grades';\nimport LoginResponse from './types/login-types';\n\nlet authToken: string | null;\n\nfunction handleLogin(res: LoginResponse) {\n  alertInfo('Logged In!', 2000);\n  hideForm(loginFormContainer);\n  const { userId, authToken } = res.authenticationInfo || {};\n  updateUserObj({ userId, authToken });\n  checkForToken();\n}\n\nfunction handleSubmit(e: JQuery.SubmitEvent) {\n  e.preventDefault();\n  const { formData, clearableInputs } = getFormData(e.target);\n  getToken(formData)\n    .then((res) => {\n      console.log(res);\n      if (res.success) {\n        clearableInputs.forEach((input) => (input.value = ''));\n        handleLogin(res);\n        return;\n      }\n      alertDanger('Incorrect Credentials', null);\n    })\n    .catch((e: Error) => {\n      console.error(e);\n      alertDanger(e.message, null);\n    });\n}\n\nfunction buildUserEnrollmentObject(enrollments: Enrollment[]): AdaptedEnrollment[] {\n  const userEnrollments = enrollments.map((item) => ({\n    id: item.id,\n    courseId: item.courseId,\n    courseRole: item.courseRole.name,\n    cohortName: item.course.cohort.name,\n    active: item.active,\n    startDate: item.course.startDate,\n    endDate: item.course.endDate,\n  }));\n  return userEnrollments;\n}\n\nfunction buildCohortButtons(enrollments: AdaptedEnrollment[]) {\n  enrollments.forEach(({ id, cohortName, courseId }) => {\n    assignmentButtonContainer.append(cohortButton({ id, cohortName, courseId }));\n  });\n}\n\nfunction getUserCourses() {\n  getMe(authToken)\n    .then(({ Enrollments }) => {\n      const userEnrollments = buildUserEnrollmentObject(Enrollments);\n      buildCohortButtons(userEnrollments);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nfunction buildClassTable(mappedAssignments: MappedAssignments, mappedStudents: MappedStudentsWithAssignments) {\n  const table = classTable({ assignments: mappedAssignments, students: mappedStudents });\n  assignmentRootElem.html(table);\n}\n\nfunction handleCourseClick(this: JQuery.SubmitEvent) {\n  assignmentButtonContainer.find('button').each(function () {\n    $(this).removeClass('active');\n  });\n  $(this).addClass('active');\n  const id = parseInt($(this).data('id'));\n  const courseId = parseInt($(this).data('course-id'));\n  Promise.all([getCohortAssignments(id, authToken), getGrades(courseId, authToken)])\n    .then(([rawCohortAssignments, rawStudentGrades]) => {\n      const mappedAssignments = reduceCohortAssignments(rawCohortAssignments);\n      const mappedStudentGrades = buildStudentAssignmentGrades(rawStudentGrades, mappedAssignments);\n      buildClassTable(mappedAssignments, mappedStudentGrades);\n    })\n    .catch((e) => {\n      console.error(e);\n    });\n}\n\nfunction logout() {\n  clearStorage();\n  checkForToken();\n  assignmentButtonContainer.empty();\n  assignmentRootElem.empty();\n}\n\nfunction eventListeners() {\n  loginForm.on('submit', (e: JQuery.SubmitEvent) => handleSubmit(e));\n  inputs.on('focus', () => hideAlert());\n  assignmentButtonContainer.on('click', 'button', handleCourseClick);\n  logoutButtonElem.on('click', logout);\n}\n\nfunction checkForToken() {\n  const token = getLocalToken();\n  if (!token) {\n    clearStorage();\n    showForm(loginFormContainer);\n    hideLogoutButton();\n    return;\n  }\n  showLogoutButton();\n  authToken = token;\n  getUserCourses();\n}\n\n$('document').ready(() => {\n  eventListeners();\n  checkForToken();\n});\n"]}